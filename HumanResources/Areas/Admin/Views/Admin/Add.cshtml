@model HumanResources.Models.Entities.Concrete.User

@{
    ViewData["Title"] = "Ekle";
}

<h1>Site Yöneticisi Ekleme</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Add" asp-controller="Admin" enctype="multipart/form-data" id="userForm">
            @*<div asp-validation-summary="All" class="text-danger"></div>*@
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input id="FirstName" value="@ViewBag.firstName" class="form-control" name="FirstName" />
                <span id="FirstName_error" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input id="LastName" value="@ViewBag.lastName" class="form-control" name="LastName" />
                <span id="LastName_error" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ImageURL" class="control-label"></label>
                <input asp-for="ImageURL" type="file" accept="image/*" id="imageFile" onchange="validateFileType()" />
                <br />
                <span id="imageFile_error" class="text-danger"></span>
            </div>
            <input asp-for="Password" type="hidden" value="@PasswordHelper.CreateTempPassword()" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <input type="hidden" value="@ViewBag.LoginExtensionEmail" id="loginUserExtensionMail" />
            @{
                DateTime hireDate = DateTime.Now.AddYears(-37);

                string hireYear = hireDate.Year.ToString();
                string hireMonth = hireDate.Month.ToString();
                string hireDay = hireDate.Day.ToString();

                if (Convert.ToInt32(hireMonth) < 10) hireMonth = "0" + hireMonth;
                if (Convert.ToInt32(hireDay) < 10) hireDay = "0" + hireDay;

                string minHire = hireYear + "-" + hireMonth + "-" + hireDay;

                hireDate = DateTime.Now.AddMonths(1);

                hireYear = hireDate.Year.ToString();
                hireMonth = hireDate.Month.ToString();
                hireDay = hireDate.Day.ToString();

                if (Convert.ToInt32(hireMonth) < 10) hireMonth = "0" + hireMonth;
                if (Convert.ToInt32(hireDay) < 10) hireDay = "0" + hireDay;

                string maxHire = hireYear + "-" + hireMonth + "-" + hireDay;
            }
            <div class="form-group">
                <label asp-for="HireDate" class="control-label"></label>
                <input asp-for="HireDate" id="hireDate" class="form-control" type="date" min="@minHire" max="@maxHire" onkeydown="return false" />
                <span id="hireDate_error" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                    <label asp-for="Unit" class="control-label"></label>
                    <input asp-for="Unit" class="form-control" />
                    <span asp-validation-for="Unit" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="BirthDate" class="control-label"></label>
                    <input asp-for="BirthDate" class="form-control" type="date" />
                    <span asp-validation-for="BirthDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="GraduatedFromUniversity" class="control-label"></label>
                    <input asp-for="GraduatedFromUniversity" class="form-control" />
                    <span asp-validation-for="GraduatedFromUniversity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IdentityNumber" class="control-label"></label>
                    <input asp-for="IdentityNumber" class="form-control" />
                    <p style="color:red">@ViewBag.Message</p>
                    <span asp-validation-for="IdentityNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <input asp-for="Phone" class="form-control" placeholder="5351112233" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="form-group">
                        <label asp-for="Role.Name" class="control-label"></label>
                        <select asp-for="RoleId" class="form-control" asp-items="ViewBag.Role"></select>
                    </div>
                </div>*@
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="" onclick="firstControl()" id="modalShow">Kaydet</button>

            <div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Kullanıcı Ekleme Onay Ekranı</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label asp-for="FirstName" class="control-label"></label>
                                <input type="text" class="form-control" id="firstName" name="FirstName" onkeyup="nameChange()" />
                                <span id="firstName_error" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="LastName" class="control-label"></label>
                                <input type="text" class="form-control" id="lastName" name="LastName" onkeyup="nameChange()" />
                                <span id="lastName_error" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Email" class="control-label"></label>
                                <div class="row" style="margin: 0 2px 0 2px; border-radius: 0.25rem; border: 1px solid #ced4da;">
                                    <div class="col-md-6 float-left" style="padding-left: 0;">
                                        <input type="text" class="form-control border-0" id="fullName" oninput="fullNameChange()" />
                                    </div>
                                    <div class="col-md-6">
                                        <span class="border-0" id="extension" style="display: block; width: 100%; height: calc(1.5em + 0.75rem + 2px); padding: 0.375rem 0.75rem; font-size: 1rem; font-weight: 400; line-height: 1.5; color: #495057; background-color: #fff; background-clip: padding-box; "></span>
                                    </div>
                                </div>
                                <input type="text" class="form-control" oninput="emailChange()" asp-for="Email" hidden>
                                <span id="errorMessage" class="text-danger"></span>
                            </div>

                            @*<div class="form-group">
                                    <label asp-for="Email" class="control-label"></label>
                                    <input type="text" class="form-control" oninput="emailChange()" asp-for="Email">
                                    <span id="errorMessage" class="text-danger"></span>
                                </div>*@
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">İptal</button>
                            <input class="btn btn-success" type="submit" value="Onayla" id="acceptBtn" />
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="~/lib/jquery-validate/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<script>
    var loginUserMail = "";
    var mailControlURL = "";
    var modal;

    $(document).ready(function () {
        loginUserMail = $('#loginUserExtensionMail').val();
        mailControlURL = "/Admin/Admin/IsEmailExist"
        //var firstName = $('#firstName').val();
        //var lastName = $('#lastName').val();
        //var jobHireDate = $('#HireDate').val();

        $('#addUserModal').on('show.bs.modal', function (event) {
            modal = $(this);

            var firstName = $('#FirstName').val();
            var lastName = $('#LastName').val();

            modal.find('.modal-body #firstName').val(firstName)
            modal.find('.modal-body #lastName').val(lastName)

            $("#extension").text("@@" + loginUserMail);

            var mailAddress = CreateMailAddress(firstName, lastName, loginUserMail).toLowerCase();

            $("#fullName").val(mailAddress.substring(0, mailAddress.indexOf('@@')));

            mailControl(mailAddress, mailControlURL);

            modal.find('.modal-body #Email').val(mailAddress)
        });

        $('#acceptBtn').click(function () {
            if (firstName == "" && lastName == "") {
                $('#addUserModal').modal('hide');
            }
        });

        setInputFilter(document.getElementById("Phone"), function (value) {
            return /^-?\d*$/.test(value);
        });

        setInputFilter(document.getElementById("IdentityNumber"), function (value) {
            return /^-?\d*$/.test(value);
        });
    });

    function CreateMailAddress(firstName, lastName, extensionUserrMail) {
        if (firstName.includes(" ")) {
            firstName = firstName.replace(" ", "");
        }
        var mailAddress = firstName.concat(".", lastName, "@@", extensionUserrMail);
        return fromTurkishToEnglish(mailAddress.toLowerCase());
    }

    function mailControl(mailAddress, mailControlURL) {
        $.ajax({
            url: mailControlURL,
            type: 'POST',
            dataType: 'json',
            data: { "mailAddress": mailAddress }
        }).done(function (res) {
            if (res) {
                $('#errorMessage').text("Bu mail adresi kullanılamaz. Başka bir tane giriniz.");
                secondControl();
                $('#acceptBtn').prop("disabled", true);
            }
            else {
                $('#errorMessage').text("");
                $('#acceptBtn').prop("disabled", false);
                secondControl();
            }
        });
    }

    function nameChange() {
        var firstName = $('#firstName').val();
        var lastName = $('#lastName').val();
        $('input[name="FirstName"]').val(firstName);
        $('input[name="LastName"]').val(lastName);

        var mail = CreateMailAddress(firstName, lastName, loginUserMail);
        console.log(mail);
        $("#fullName").val(mail.substring(0, mail.indexOf('@@')));
        modal.find('.modal-body #Email').val(mail);
        emailChange();
        return mail;
    }

    function emailChange() {
        var email = $('#Email').val();
        $('input[name="Email"]').val(email);
        mailControl(email, mailControlURL);
    }

    function fromTurkishToEnglish(text) {
        var length = text.length;

        for (var i = 0; i < length; i++) {
            text = text.replace('Ğ', 'g')
                .replace('Ü', 'u')
                .replace('Ş', 's')
                .replace('I', 'i')
                .replace('İ', 'i')
                .replace('Ö', 'o')
                .replace('Ç', 'c')
                .replace('ğ', 'g')
                .replace('ü', 'u')
                .replace('ş', 's')
                .replace('ı', 'i')
                .replace('ö', 'o')
                .replace('ç', 'c');
        }

        return text;
    }

    function fullNameChange() {
        var fullName = $("#fullName").val();
        var extension = $("#extension").text();
        fullName = fromTurkishToEnglish(fullName);
        $("#fullName").val(fullName);
        modal.find('.modal-body #Email').val(fullName + extension);
        mailControl(modal.find('.modal-body #Email').val(), mailControlURL);
    }

    function firstControl() {
        var fields = ["FirstName", "LastName", "hireDate"];
        var trFields = { "FirstName": "Ad", "LastName": "Soyad", "hireDate": "İşe Başlangıç Tarihi" };

        requiredControl(fields, trFields, "first");
    }

    function secondControl() {
        var fields = ["firstName", "lastName"];
        var trFields = { "firstName": "Ad", "lastName": "Soyad" };

        requiredControl(fields, trFields, "second");
    }

    function requiredControl(fields, trFields, which) {
        var approved = true;

        var length = fields.length;

        for (var i = 0; i < length; i++) {
            var field = fields.pop();

            if ($("#" + field).val() == "") {
                $("#" + field + "_error").text("Lütfen " + trFields[field] + " alanını giriniz!");
                approved = false;
            }
            else {
                $("#" + field + "_error").text("");
            }
        }

        approved = validateFileType();

        if (which == "first") {
            if (approved) {
                $("#modalShow").attr("data-target", "#addUserModal");
            }
            else {
                $("#modalShow").attr("data-target", "");
            }
        }
        else {
            if (approved) {
                $("#acceptBtn").prop("disabled", false);
            }
            else {
                $("#acceptBtn").prop("disabled", true);
            }
        }
    }

    function validateFileType() {
        var fileName = document.getElementById("imageFile").value;
        var idxDot = fileName.lastIndexOf(".") + 1;
        var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
        if (extFile == "jpg" || extFile == "jpeg" || extFile == "png" || fileName == "") {
            $("#imageFile_error").text("");
            return true;
        } else {
            $("#imageFile_error").text("Sadece jpg, jpeg veya png formatında yükleme yapabilirsiniz!");
            return false;
        }
    }
</script>
